{"version":3,"sources":["treyyoder:leafnav/leafnav.js","treyyoder:leafnav/Marker.NavAids.js"],"names":[],"mappings":";;;;;;;;AAAA,kB;AACA,oB;AACA,6D;AACA,2C;AACA,uC;AACA,2C;AACA,uC;AACA,iD;AACA,+B;AACA,sE;AACA,6C;AACA,sD;AACA,oB;AACA,yB;AACA,G;AACA,oB;AACA,uB;AACA,G;AACA,a;AACA,G;;AAEA,sD;AACA,4C;AACA,4C;AACA,sC;AACA,sC;AACA,4D;AACA,uE;AACA,qD;AACA,oD;AACA,iB;AACA,G;;AAEA,sE;AACA,6B;AACA,+B;AACA,0C;AACA,0C;AACA,4B;AACA,8D;AACA,iE;AACA,2D;AACA,6D;AACA,wB;AACA,0B;AACA,4D;AACA,sD;AACA,G;;AAEA,+B;AACA,6C;AACA,yC;AACA,G;;AAEA,+C;AACA,iE;AACA,G;AACA,wC;AACA,4D;AACA,G;AACA,yC;AACA,6B;AACA,2B;AACA,G;AACA,gC;AACA,iE;AACA,0D;AACA,4D;AACA,6C;AACA,I;AACA,G;AACA,E;;AAEA,E;;AAEA,qC;AACA,6B;AACA,C;;;;;;;;;;;;;;;;;;AC7EA,8C;AACA,kB;AACA,iC;AACA,iC;AACA,gB;AACA,iB;AACA,G;AACA,0B;AACA,iC;AACA,K;AACA,yC;AACA,4C;AACA,G;AACA,4B;AACA,mC;AACA,G;AACA,qC;AACA,qC;AACA,gB;AACA,oB;AACA,I;AACA,wB;AACA,+B;AACA,G;AACA,6B;AACA,6B;AACA,gB;AACA,oB;AACA,I;AACA,mC;AACA,0C;AACA,G;AACA,mD;AACA,mD;AACA,gB;AACA,oB;AACA,G;AACA,+B;AACA,sC;AACA,G;AACA,2C;AACA,2C;AACA,gB;AACA,oB;AACA,G;AACA,8B;AACA,qC;AACA,G;AACA,yC;AACA,yC;AACA,gB;AACA,oB;AACA,G;AACA,gC;AACA,mD;AACA,qB;AACA,4D;AACA,4D;AACA,0D;AACA,4C;AACA,G;;AAEA,qC;AACA,qC;AACA,gB;AACA,iB;AACA,G;AACA,C;AACA,4B;AACA,mC;AACA,G;;AAEA,0B;AACA,iB;AACA,8C;AACA,mB;AACA,gD;;AAEA,iC;;AAEA,+B;AACA,gD;AACA,8C;AACA,S;AACA,oB;AACA,mB;AACA,6B;AACA,I;AACA,sB;AACA,+C;AACA,gD;AACA,6C;AACA,qB;AACA,6B;AACA,I;AACA,G;AACA,E;AACA,C;AACA,G","file":"/packages/treyyoder_leafnav.js","sourcesContent":["Meteor.leafnav = {\n\tmarkIntervals : [],\n\tgetDistance : function(currentPosition, destination, unit) {\n\t\tvar radlat1 = currentPosition[0].toRad();\n\t\tvar radlat2 = destination[0].toRad();\n\t\tvar radlon1 = currentPosition[1].toRad();\n\t\tvar radlon2 = destination[1].toRad();\n\t\tvar theta = currentPosition[1] - destination[1]\n\t\tvar radtheta = theta.toRad();\n\t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1)\n\t\t\t\t* Math.cos(radlat2) * Math.cos(radtheta);\n\t\tdist = Math.acos(dist) * 180 / Math.PI * 60 * 1.1515\n\t\tif (unit == \"K\") {\n\t\t\tdist = dist * 1.609344\n\t\t}\n\t\tif (unit == \"N\") {\n\t\t\tdist = dist * 0.8684\n\t\t}\n\t\treturn dist\n\t},\n\n\tgetBearing : function(currentPosition, destination) {\n\t\tvar startLat = currentPosition[0].toRad();\n\t\tvar startLng = currentPosition[1].toRad();\n\t\tvar endLat = destination[0].toRad();\n\t\tvar endLng = destination[1].toRad();\n\t\tvar dLng = Math.sin(endLng - startLng) * Math.cos(endLat);\n\t\tvar dLat = Math.cos(startLat) * Math.sin(endLat) - Math.sin(startLat)\n\t\t\t\t* Math.cos(endLat) * Math.cos(endLng - startLng);\n\t\tvar bearing = Math.atan2(dLng, dLat) * 57.2957795;\n\t\treturn bearing;\n\t},\n\n\tcalculateNewPosition : function(currentPosition, distance, bearing) {\n\t\t// distance = 150.0/6371.0;\n\t\tdistance = distance / 6371.0;\n\t\tvar oldLat = currentPosition[0].toRad();\n\t\tvar oldLng = currentPosition[1].toRad();\n\t\tbearing = bearing.toRad();\n\t\tvar newLat = Math.asin(Math.sin(oldLat) * Math.cos(distance)\n\t\t\t\t+ Math.cos(oldLat) * Math.sin(distance) * Math.cos(bearing));\n\t\tvar a = Math.atan2(Math.sin(bearing) * Math.sin(distance)\n\t\t\t\t* Math.cos(oldLat), Math.cos(distance) - Math.sin(oldLat)\n\t\t\t\t* Math.sin(newLat));\n\t\tvar newLng = oldLng + a;\n\t\tnewLng = (newLng + 3 * Math.PI) % (2 * Math.PI) - Math.PI;\n\t\treturn [ newLat * 57.2957795, newLng * 57.2957795 ];\n\t},\n\n\tgetRandomLatLng : function() {\n\t\treturn [ this.getRandomInRange(-85, 85, 3),\n\t\t\t\tthis.getRandomInRange(-180, 180, 3) ]\n\t},\n\n\tgetRandomInRange : function(from, to, fixed) {\n\t\treturn (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n\t},\n\tgetCurrentPosition : function(marker) {\n\t\treturn [ marker.getLatLng().lat, marker.getLatLng().lng ];\n\t},\n\trotateMarker : function(marker, angle) {\n\t\tmarker.setIconAngle(angle);\n\t\tmarker.setBearing(angle);\n\t},\n\tstopMarker : function(marker) {\n\t\tfor (var i = 0; i < Meteor.leafnav.markIntervals.length; i++) {\n\t\t\tif (Meteor.leafnav.markIntervals[i].marker == marker) {\n\t\t\t\tclearInterval(Meteor.leafnav.markIntervals[i].interval);\n\t\t\t\tMeteor.leafnav.markIntervals.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\nNumber.prototype.toRad = function() {\n\treturn this * Math.PI / 180;\n}","var _old__setPos = L.Marker.prototype._setPos;\nL.Marker.include({\n\tsetBearing: function (bearing) {\n\t\tthis.options.bearing = bearing;\n\t\tif (this._map)\n\t\t\tthis.update();\n\t},\n\tgetBearing: function () {\n\t\treturn this.options.bearing;\t\t\t\n\t},\t\t\n\tsetCoordinates: function (newPosition) {\n\t\tmarker.setLatLng(newPosition).update();\t\t\t\n\t},\n\tgetMilestone: function () {\n\t\treturn this.options.milestone;\t\t\t\n\t},\n\tsetMilestone: function (milestone) {\n\t\tthis.options.milestone = milestone;\n\t\tif (this._map)\n\t\t\tthis.update();\t\t\t\n\t},\t\n\tgetSpeed: function () {\n\t\treturn this.options.speed;\t\t\t\n\t},\n\tsetSpeed: function (speed) {\n\t\tthis.options.speed = speed;\n\t\tif (this._map)\n\t\t\tthis.update();\t\t\t\n\t},\t\n\tgetDistanceTraveled: function () {\n\t\treturn this.options.distanceTraveled;\t\t\t\n\t},\n\tsetDistanceTraveled: function (distanceTraveled) {\n\t\tthis.options.distanceTraveled = distanceTraveled;\n\t\tif (this._map)\n\t\t\tthis.update();\t\t\t\n\t},\n\tgetTripDistance: function () {\n\t\treturn this.options.tripDistance;\t\t\t\n\t},\n\tsetTripDistance: function (tripDistance) {\n\t\tthis.options.tripDistance = tripDistance;\n\t\tif (this._map)\n\t\t\tthis.update();\t\t\t\n\t},\n\tgetArrivalTime: function () {\n\t\treturn this.options.arrivalTime;\t\t\t\n\t},\n\tsetArrivalTime: function (arrivalTime) {\n\t\tthis.options.arrivalTime = arrivalTime;\n\t\tif (this._map)\n\t\t\tthis.update();\t\t\t\n\t},\n\t_updateImg: function(i, a, s) {\n\t\ta = L.point(s).divideBy(2)._subtract(L.point(a));\n\t\tvar transform = '';\n\t\ttransform += ' translate(' + -a.x + 'px, ' + -a.y + 'px)';\n\t\ttransform += ' rotate(' + this.options.iconAngle + 'deg)';\n\t\ttransform += ' translate(' + a.x + 'px, ' + a.y + 'px)';\n\t\ti.style[L.DomUtil.TRANSFORM] += transform;\n\t},\n\n\tsetIconAngle: function (iconAngle) {\n\t\tthis.options.iconAngle = iconAngle;\n\t\tif (this._map)\n\t\t\tthis.update();\n\t},\n\t\n\tgetIconAngle: function () {\n\t\treturn this.options.iconAngle;\t\t\t\n\t},\n\n\t_setPos: function (pos) {\n\t\tif (this._icon)\n\t\t\tthis._icon.style[L.DomUtil.TRANSFORM] = '';\n\t\tif (this._shadow)\n\t\t\tthis._shadow.style[L.DomUtil.TRANSFORM] = '';\n\n\t\t_old__setPos.apply(this,[pos]);\n\n\t\tif (this.options.iconAngle) {\n\t\t\tvar a = this.options.icon.options.iconAnchor;\n\t\t\tvar s = this.options.icon.options.iconSize;\n\t\t\tvar i;\n\t\t\tif (this._icon) {\n\t\t\t\ti = this._icon;\n\t\t\t\tthis._updateImg(i, a, s);\n\t\t\t}\n\t\t\tif (this._shadow) {\n\t\t\t\tif (this.options.icon.options.shadowAnchor)\n\t\t\t\t\ta = this.options.icon.options.shadowAnchor;\n\t\t\t\ts = this.options.icon.options.shadowSize;\n\t\t\t\ti = this._shadow;\n\t\t\t\tthis._updateImg(i, a, s);\n\t\t\t}\n\t\t}\n\t}\n\t\n});\n"]}